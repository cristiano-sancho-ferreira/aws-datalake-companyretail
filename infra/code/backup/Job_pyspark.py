import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

## @params: [JOB_NAME]
args = getResolvedOptions(sys.argv, ['JOB_NAME'])

sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)
## @type: DataSource
## @args: [database = "alelo_bi_dev_dataraw", table_name = "vta_enc_flatfile", transformation_ctx = "DataSource0"]
## @return: DataSource0
## @inputs: []
DataSource0 = glueContext.create_dynamic_frame.from_catalog(database = "alelo_bi_dev_dataraw", table_name = "vta_enc_flatfile", transformation_ctx = "DataSource0")
## @type: ApplyMapping
## @args: [mappings = [("centro_cd", "string", "centro_cd", "string"), ("local_gestion", "string", "local_gestion", "string"), ("caja_nro", "string", "caja_nro", "string"), ("transaccion_nro", "string", "transaccion_nro", "string"), ("fecha", "string", "fecha", "string"), ("hora", "string", "hora", "string"), ("tipo_transaccion", "string", "tipo_transaccion", "string"), ("tipo_identificador_operador", "string", "tipo_identificador_operador", "string"), ("identificador_operador_nro", "string", "identificador_operador_nro", "string"), ("total_financiamiento_mnt", "double", "total_financiamiento_mnt", "double"), ("total_mnt", "double", "total_mnt", "double"), ("tiempo_escaneo", "double", "tiempo_escaneo", "double"), ("tiempo_cobro", "double", "tiempo_cobro", "double"), ("tiempo_desconexion", "double", "tiempo_desconexion", "double"), ("tiempo_inactivo", "double", "tiempo_inactivo", "double"), ("transaccion_ind", "string", "transaccion_ind", "string"), ("tipo_comprobante", "string", "tipo_comprobante", "string"), ("documento_nro", "string", "documento_nro", "string"), ("tipo_documento_ref", "string", "tipo_documento_ref", "string"), ("documento_ref_nro", "string", "documento_ref_nro", "string"), ("canal_venta_cd", "string", "canal_venta_cd", "string"), ("canal_pedido_nro", "string", "canal_pedido_nro", "string"), ("tipo_identif_cliente", "string", "tipo_identif_cliente", "string"), ("cliente_identif_nro", "string", "cliente_identif_nro", "string"), ("tipo_identif_comprador", "string", "tipo_identif_comprador", "string"), ("comprador_identif_nro", "string", "comprador_identif_nro", "string"), ("tipo_identif_empleado", "string", "tipo_identif_empleado", "string"), ("empleado_identif_nro", "string", "empleado_identif_nro", "string"), ("tipo_programa_especial", "string", "tipo_programa_especial", "string"), ("programa_especial_nro", "string", "programa_especial_nro", "string"), ("fecha_contable", "string", "fecha_contable", "string"), ("merc_nivel1_cd", "string", "merc_nivel1_cd", "string"), ("tipo_identif_vendedor", "string", "tipo_identif_vendedor", "string"), ("nro_identif_vendedor", "string", "nro_identif_vendedor", "string"), ("tipo_comision_vendedor", "string", "tipo_comision_vendedor", "string"), ("tipo_venta_ind", "string", "tipo_venta_ind", "string"), ("caja_fiscal_nro", "string", "caja_fiscal_nro", "string"), ("codigo_postal_cliente", "string", "codigo_postal_cliente", "string"), ("version_software_pos", "string", "version_software_pos", "string"), ("anulacion_ind", "string", "anulacion_ind", "string"), ("modo_transaccion_cd", "string", "modo_transaccion_cd", "string"), ("autoriza_modificacion_ind", "string", "autoriza_modificacion_ind", "string"), ("lote_sec_nro", "string", "lote_sec_nro", "string"), ("categoria_ib_cliente_cd", "string", "categoria_ib_cliente_cd", "string"), ("zeta_nro", "string", "zeta_nro", "string"), ("fecha_fin_transaccion", "string", "fecha_fin_transaccion", "string"), ("hora_fin_transaccion", "string", "hora_fin_transaccion", "string")], transformation_ctx = "Transform0"]
## @return: Transform0
## @inputs: [frame = DataSource0]
Transform0 = ApplyMapping.apply(frame = DataSource0, mappings = [("centro_cd", "string", "centro_cd", "string"), ("local_gestion", "string", "local_gestion", "string"), ("caja_nro", "string", "caja_nro", "string"), ("transaccion_nro", "string", "transaccion_nro", "string"), ("fecha", "string", "fecha", "string"), ("hora", "string", "hora", "string"), ("tipo_transaccion", "string", "tipo_transaccion", "string"), ("tipo_identificador_operador", "string", "tipo_identificador_operador", "string"), ("identificador_operador_nro", "string", "identificador_operador_nro", "string"), ("total_financiamiento_mnt", "double", "total_financiamiento_mnt", "double"), ("total_mnt", "double", "total_mnt", "double"), ("tiempo_escaneo", "double", "tiempo_escaneo", "double"), ("tiempo_cobro", "double", "tiempo_cobro", "double"), ("tiempo_desconexion", "double", "tiempo_desconexion", "double"), ("tiempo_inactivo", "double", "tiempo_inactivo", "double"), ("transaccion_ind", "string", "transaccion_ind", "string"), ("tipo_comprobante", "string", "tipo_comprobante", "string"), ("documento_nro", "string", "documento_nro", "string"), ("tipo_documento_ref", "string", "tipo_documento_ref", "string"), ("documento_ref_nro", "string", "documento_ref_nro", "string"), ("canal_venta_cd", "string", "canal_venta_cd", "string"), ("canal_pedido_nro", "string", "canal_pedido_nro", "string"), ("tipo_identif_cliente", "string", "tipo_identif_cliente", "string"), ("cliente_identif_nro", "string", "cliente_identif_nro", "string"), ("tipo_identif_comprador", "string", "tipo_identif_comprador", "string"), ("comprador_identif_nro", "string", "comprador_identif_nro", "string"), ("tipo_identif_empleado", "string", "tipo_identif_empleado", "string"), ("empleado_identif_nro", "string", "empleado_identif_nro", "string"), ("tipo_programa_especial", "string", "tipo_programa_especial", "string"), ("programa_especial_nro", "string", "programa_especial_nro", "string"), ("fecha_contable", "string", "fecha_contable", "string"), ("merc_nivel1_cd", "string", "merc_nivel1_cd", "string"), ("tipo_identif_vendedor", "string", "tipo_identif_vendedor", "string"), ("nro_identif_vendedor", "string", "nro_identif_vendedor", "string"), ("tipo_comision_vendedor", "string", "tipo_comision_vendedor", "string"), ("tipo_venta_ind", "string", "tipo_venta_ind", "string"), ("caja_fiscal_nro", "string", "caja_fiscal_nro", "string"), ("codigo_postal_cliente", "string", "codigo_postal_cliente", "string"), ("version_software_pos", "string", "version_software_pos", "string"), ("anulacion_ind", "string", "anulacion_ind", "string"), ("modo_transaccion_cd", "string", "modo_transaccion_cd", "string"), ("autoriza_modificacion_ind", "string", "autoriza_modificacion_ind", "string"), ("lote_sec_nro", "string", "lote_sec_nro", "string"), ("categoria_ib_cliente_cd", "string", "categoria_ib_cliente_cd", "string"), ("zeta_nro", "string", "zeta_nro", "string"), ("fecha_fin_transaccion", "string", "fecha_fin_transaccion", "string"), ("hora_fin_transaccion", "string", "hora_fin_transaccion", "string")], transformation_ctx = "Transform0")
## @type: DataSink
## @args: [connection_type = "s3", catalog_database_name = "alelo_bi_dev_datalake", format = "glueparquet", connection_options = {"path": "s3://alelo-bi-dev-datalake/vta_enc/", "compression": "snappy", "partitionKeys": ["fecha_contable" ,"centro_cd"], "enableUpdateCatalog":true, "updateBehavior":"UPDATE_IN_DATABASE"}, catalog_table_name = "vta_enc_parquet", transformation_ctx = "DataSink0"]
## @return: DataSink0
## @inputs: [frame = Transform0]
DataSink0 = glueContext.getSink(path = "s3://alelo-bi-dev-datalake/vta_enc/", connection_type = "s3", updateBehavior = "UPDATE_IN_DATABASE", partitionKeys = ["fecha_contable","centro_cd"], compression = "snappy", enableUpdateCatalog = True, transformation_ctx = "DataSink0")
DataSink0.setCatalogInfo(catalogDatabase = "alelo_bi_dev_datalake",catalogTableName = "vta_enc_parquet")
DataSink0.setFormat("glueparquet")
DataSink0.writeFrame(Transform0)

job.commit()